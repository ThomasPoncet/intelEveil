
/**
 * Rule to send the command ON to the arduino that command the coffee machine
 */
rule "Coffee Machine on"
when
        Item CoffeeMachine received command ON
then
        logInfo("SwitchLightsOnCoffeMachine","Switching on coffee machine")
        sendCommand(ArduinoCoffee, "ON;")
end


/**
 * Rule to send the command OFF to the arduino that command the coffee machine
 */
rule "Coffee Machine off"
when
        Item CoffeeMachine received command OFF
then
        logInfo("SwitchOffCoffeMachine","Switching off coffee machine")
        sendCommand(ArduinoCoffee, "OFF;")
end


/**
 * Rule when pressure sensor is pressed or unpressd
 */
rule "Pressure sensor pressed or unpressed"
when
        Item ArduinoPressureSensor changed
then
		if (ArduinoPressureSensor.state.toString().contains("PRESSURE1")){
	        logInfo("SensorPressed","Pressure Sensor has been pressed")
	        sendCommand(CoffeeMachine, ON)
	        executeCommandLine('/etc/openhab/configurations/play.sh')
//	        executeCommandLine('echo -n "add /usr/share/openhab/sounds/CoursePoursuite.mp3" | nc -U /tmp/vlc.sock | wall')
       	} else if (ArduinoPressureSensor.state.toString().contains("PRESSURE0")){
       		logInfo("SensorUnPressed","Pressure Sensor has been unpressed")
        	sendCommand(CoffeeMachine, OFF)
	        executeCommandLine('echo -n "pause" | nc -U /tmp/vlc.sock ')
       	}
end



/**
 * IT SHOULD WORK... We've got to search on that
 */

///**
// * Rule when pressure sensor is pressed
// */
//rule "Pressure sensor pressed"
//when
//        Item ArduinoPressureSensor changed from PRESSURE0 to PRESSURE1
//then
//        logInfo("SensorPressed","Pressure Sensor has been pressed")
//        sendCommand(CoffeeMachine, ON)
//end
//
//
///**
// * Rule when pressure sensor is unpressed
// */
//rule "Pressure sensor unpressed"
//when
//        Item ArduinoPressureSensor changed from PRESSURE1 to PRESSURE0
//then
//        logInfo("SensorUnPressed","Pressure Sensor has been unpressed")
//        sendCommand(CoffeeMachine, OFF)
//end
